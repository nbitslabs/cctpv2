/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type ReceiveMessageParams = {
  message: ReadonlyUint8Array;
  attestation: ReadonlyUint8Array;
};

export type ReceiveMessageParamsArgs = ReceiveMessageParams;

export function getReceiveMessageParamsEncoder(): Encoder<ReceiveMessageParamsArgs> {
  return getStructEncoder([
    ['message', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['attestation', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
  ]);
}

export function getReceiveMessageParamsDecoder(): Decoder<ReceiveMessageParams> {
  return getStructDecoder([
    ['message', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['attestation', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
  ]);
}

export function getReceiveMessageParamsCodec(): Codec<
  ReceiveMessageParamsArgs,
  ReceiveMessageParams
> {
  return combineCodec(
    getReceiveMessageParamsEncoder(),
    getReceiveMessageParamsDecoder()
  );
}
