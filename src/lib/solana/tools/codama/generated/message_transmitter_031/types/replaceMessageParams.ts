/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type ReplaceMessageParams = {
  originalMessage: ReadonlyUint8Array;
  originalAttestation: ReadonlyUint8Array;
  newMessageBody: ReadonlyUint8Array;
  newDestinationCaller: Address;
};

export type ReplaceMessageParamsArgs = ReplaceMessageParams;

export function getReplaceMessageParamsEncoder(): Encoder<ReplaceMessageParamsArgs> {
  return getStructEncoder([
    [
      'originalMessage',
      addEncoderSizePrefix(getBytesEncoder(), getU32Encoder()),
    ],
    [
      'originalAttestation',
      addEncoderSizePrefix(getBytesEncoder(), getU32Encoder()),
    ],
    [
      'newMessageBody',
      addEncoderSizePrefix(getBytesEncoder(), getU32Encoder()),
    ],
    ['newDestinationCaller', getAddressEncoder()],
  ]);
}

export function getReplaceMessageParamsDecoder(): Decoder<ReplaceMessageParams> {
  return getStructDecoder([
    [
      'originalMessage',
      addDecoderSizePrefix(getBytesDecoder(), getU32Decoder()),
    ],
    [
      'originalAttestation',
      addDecoderSizePrefix(getBytesDecoder(), getU32Decoder()),
    ],
    [
      'newMessageBody',
      addDecoderSizePrefix(getBytesDecoder(), getU32Decoder()),
    ],
    ['newDestinationCaller', getAddressDecoder()],
  ]);
}

export function getReplaceMessageParamsCodec(): Codec<
  ReplaceMessageParamsArgs,
  ReplaceMessageParams
> {
  return combineCodec(
    getReplaceMessageParamsEncoder(),
    getReplaceMessageParamsDecoder()
  );
}
