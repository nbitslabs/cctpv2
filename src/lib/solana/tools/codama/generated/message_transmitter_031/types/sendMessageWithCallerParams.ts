/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type SendMessageWithCallerParams = {
  destinationDomain: number;
  recipient: Address;
  messageBody: ReadonlyUint8Array;
  destinationCaller: Address;
};

export type SendMessageWithCallerParamsArgs = SendMessageWithCallerParams;

export function getSendMessageWithCallerParamsEncoder(): Encoder<SendMessageWithCallerParamsArgs> {
  return getStructEncoder([
    ['destinationDomain', getU32Encoder()],
    ['recipient', getAddressEncoder()],
    ['messageBody', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['destinationCaller', getAddressEncoder()],
  ]);
}

export function getSendMessageWithCallerParamsDecoder(): Decoder<SendMessageWithCallerParams> {
  return getStructDecoder([
    ['destinationDomain', getU32Decoder()],
    ['recipient', getAddressDecoder()],
    ['messageBody', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['destinationCaller', getAddressDecoder()],
  ]);
}

export function getSendMessageWithCallerParamsCodec(): Codec<
  SendMessageWithCallerParamsArgs,
  SendMessageWithCallerParams
> {
  return combineCodec(
    getSendMessageWithCallerParamsEncoder(),
    getSendMessageWithCallerParamsDecoder()
  );
}
