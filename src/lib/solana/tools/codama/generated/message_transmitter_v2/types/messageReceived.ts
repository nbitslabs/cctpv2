/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type MessageReceived = {
  caller: Address;
  sourceDomain: number;
  nonce: Array<number>;
  sender: Address;
  finalityThresholdExecuted: number;
  messageBody: ReadonlyUint8Array;
};

export type MessageReceivedArgs = MessageReceived;

export function getMessageReceivedEncoder(): Encoder<MessageReceivedArgs> {
  return getStructEncoder([
    ['caller', getAddressEncoder()],
    ['sourceDomain', getU32Encoder()],
    ['nonce', getArrayEncoder(getU8Encoder(), { size: 32 })],
    ['sender', getAddressEncoder()],
    ['finalityThresholdExecuted', getU32Encoder()],
    ['messageBody', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
  ]);
}

export function getMessageReceivedDecoder(): Decoder<MessageReceived> {
  return getStructDecoder([
    ['caller', getAddressDecoder()],
    ['sourceDomain', getU32Decoder()],
    ['nonce', getArrayDecoder(getU8Decoder(), { size: 32 })],
    ['sender', getAddressDecoder()],
    ['finalityThresholdExecuted', getU32Decoder()],
    ['messageBody', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
  ]);
}

export function getMessageReceivedCodec(): Codec<
  MessageReceivedArgs,
  MessageReceived
> {
  return combineCodec(getMessageReceivedEncoder(), getMessageReceivedDecoder());
}
