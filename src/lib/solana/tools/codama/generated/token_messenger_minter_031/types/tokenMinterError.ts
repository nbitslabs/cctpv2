/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getEnumDecoder,
  getEnumEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export enum TokenMinterError {
  InvalidAuthority,
  InvalidTokenMinterState,
  ProgramPaused,
  InvalidTokenPairState,
  InvalidLocalTokenState,
  InvalidPauser,
  InvalidTokenController,
  BurnAmountExceeded,
  InvalidAmount,
}

export type TokenMinterErrorArgs = TokenMinterError;

export function getTokenMinterErrorEncoder(): Encoder<TokenMinterErrorArgs> {
  return getEnumEncoder(TokenMinterError);
}

export function getTokenMinterErrorDecoder(): Decoder<TokenMinterError> {
  return getEnumDecoder(TokenMinterError);
}

export function getTokenMinterErrorCodec(): Codec<
  TokenMinterErrorArgs,
  TokenMinterError
> {
  return combineCodec(
    getTokenMinterErrorEncoder(),
    getTokenMinterErrorDecoder()
  );
}
