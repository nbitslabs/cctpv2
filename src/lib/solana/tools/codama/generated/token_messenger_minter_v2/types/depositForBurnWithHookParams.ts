/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type DepositForBurnWithHookParams = {
  amount: bigint;
  destinationDomain: number;
  mintRecipient: Address;
  destinationCaller: Address;
  maxFee: bigint;
  minFinalityThreshold: number;
  hookData: ReadonlyUint8Array;
};

export type DepositForBurnWithHookParamsArgs = {
  amount: number | bigint;
  destinationDomain: number;
  mintRecipient: Address;
  destinationCaller: Address;
  maxFee: number | bigint;
  minFinalityThreshold: number;
  hookData: ReadonlyUint8Array;
};

export function getDepositForBurnWithHookParamsEncoder(): Encoder<DepositForBurnWithHookParamsArgs> {
  return getStructEncoder([
    ['amount', getU64Encoder()],
    ['destinationDomain', getU32Encoder()],
    ['mintRecipient', getAddressEncoder()],
    ['destinationCaller', getAddressEncoder()],
    ['maxFee', getU64Encoder()],
    ['minFinalityThreshold', getU32Encoder()],
    ['hookData', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
  ]);
}

export function getDepositForBurnWithHookParamsDecoder(): Decoder<DepositForBurnWithHookParams> {
  return getStructDecoder([
    ['amount', getU64Decoder()],
    ['destinationDomain', getU32Decoder()],
    ['mintRecipient', getAddressDecoder()],
    ['destinationCaller', getAddressDecoder()],
    ['maxFee', getU64Decoder()],
    ['minFinalityThreshold', getU32Decoder()],
    ['hookData', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
  ]);
}

export function getDepositForBurnWithHookParamsCodec(): Codec<
  DepositForBurnWithHookParamsArgs,
  DepositForBurnWithHookParams
> {
  return combineCodec(
    getDepositForBurnWithHookParamsEncoder(),
    getDepositForBurnWithHookParamsDecoder()
  );
}
